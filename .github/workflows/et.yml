# This is a basic workflow to help you get started with Actions

name: Testeo house

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 12,22 * * *'  # Runs at 8.30 AM y 17.30 PM every day

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Definir la variable nombre para que la pase al siguiente paso
      - name: Definir variable
        run: echo "USERNAME=${{ github.actor }}" >> $GITHUB_ENV

      # Instalaciones
      - name: installs
        run: pip install -r requirements.txt

      # Runs script extract
      - name: Correr python extract
        run: python extract.py

      # Commit and save
      - name: Commit and Push Changes 1
        run: |
          git config --global user.name "${{ secrets.USER_USER }}"
          git config --global user.email "${{ secrets.EMAIL_EMAIL }}"
          ls
          git add .  # Replace with your chosen file format
          git commit -m "Saved DataFrame"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.boku }}

      # Runs script transform
      - name: Correr python transform
        run: python transform.py

      # Commit and save
      - name: Commit and Push Changes 2
        run: |
          git config --global user.name "${{ secrets.USER_USER }}"
          git config --global user.email "${{ secrets.EMAIL_EMAIL }}"
          git add .  # Replace with your chosen file format
          git commit -m "Saved DataFrame"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.boku }}
